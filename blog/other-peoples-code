<!DOCTYPE html>
<!--[if lt IE 7]><html class="no-js lt-ie9 lt-ie8 lt-ie7"><![endif]-->
<!--[if IE 7]><html class="no-js lt-ie9 lt-ie8" <![endif]-->
<!--[if IE 8]><html class="no-js lt-ie9" <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js"> <!--<![endif]-->

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <title>Macroscopicentric</title>

    <!-- Favicon -->
    <link rel="icon" type="image/x-icon" href="/assets/img/favicon.ico" />

    <!-- Come and get me RSS readers -->
    <link rel="alternate" type="application/rss+xml" title="Macroscopicentric" href="https://macroscopicentric.net"/>
    
    <!-- Stylesheet -->
    <link rel="stylesheet" href="/assets/css/style.css" />

    <!-- External stylesheet for Prism's syntax highlighting -->
    <link rel="stylesheet" href="https://unpkg.com/prismjs@1.20.0/themes/prism-solarizedlight.css" />
    <!--[if IE 8]><link rel="stylesheet" href="/assets/css/ie.css"><![endif]-->
    <link rel="canonical" href="https://macroscopicentric.net/blog/other-peoples-code">
</head>


<body>

    <div class="header">
     <div class="container">
         <h1 class="logo"><a href="/">Macroscopicentric</a></h1>
         <nav class="nav-collapse">
             <ul class="noList">
             
             <li>
                 <a href="/index.html">Home</a>
             </li> 
            
             <li>
                 <a href="/about">About</a>
             </li> 
            
             <li>
                 <a href="/feed.xml">RSS</a>
             </li> 
            
             </ul>
         </nav>
     </div>
 </div><!-- end .header -->


   <div class="content">
      <div class="container">
         <div class="post">
  
  <h1 class="postTitle">Using Other People's Code</h1>
  <p class="meta">January 25, 2016</p>
  
  <p>Including other people's code in your program means you don't have to write everything from scratch. You don't have to solve every problem on your own, and it's often faster and more efficient to use something off the shelf. There are three ways to include other people's code in what you're doing.</p>
<p>The first is something you already do: using the core of a programming language. If you're using Python, for example, every time you use <code>import</code>, <code>for</code>, or <code>return</code>, you're using code other people have written. These specific examples are called keywords, and you can easily find a list of <a href="http://www.programiz.com/python-programming/keyword-list">all Python keywords</a> online. Other examples of things in Python's core include its basic data types, such as strings, lists, and dictionaries, and all the methods you can use on those types.</p>
<p>In addition to a language's core, however, there's also the language's standard library. A standard library is a collection of modules that come prepackaged with your language. When the programming language was installed on your computer, everything in the standard library was installed with it. The standard library comes ready to use. All you have to do is include the module you want to use at the top of your file. In Python, one module in the standard library that often comes in handy is the <code>collections</code> module. Once you import the <code>collections</code> module, you can use any data type from within it, such as its <code>OrderedDict</code> and <code>defaultdict</code>. (I highly recommend <a href="https://pymotw.com/3/">Python Module of the Week</a> if you want to know more about what's part of Python's standard library.) So you could do something like:</p>
<pre class="language-py"><code class="language-py"><span class="token keyword">from</span> collections <span class="token keyword">import</span> defaultdict

example <span class="token operator">=</span> defaultdict<span class="token punctuation">(</span><span class="token string">'marshmallow'</span><span class="token punctuation">)</span>
<span class="token keyword">print</span> example<span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">]</span>  <span class="token comment"># 'marshmallow'</span></code></pre>
<p>The third way to use people's code is to use external libraries. Perhaps you want to use use an external API, such as Twitter's API. One way you could interact with Twitter's API is by using Python's built-in module <code>urllib2</code>, which is part of the standard library:</p>
<pre class="language-py"><code class="language-py">	<span class="token keyword">import</span> urllib2

	response <span class="token operator">=</span> urllib2<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span><span class="token string">'http://twitter.com'</span><span class="token punctuation">)</span>
	<span class="token keyword">print</span> response<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># list of headers from 'GET http://twitter.com'</span>
	<span class="token keyword">print</span> response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># body of 'GET http://twitter.com'</span></code></pre>
<p>You can absolutely use Twitter's API (or any other public API) this way, but it's tedious! It will take a lot of code to authenticate you, then even more to fetch and parse whatever data you want access to, whether it's your own tweets, or tweets including a certain keyword, or someone else's mentions, etc. Wouldn't it be neat if someone else had done all the repetitive, boring work of making authentication work and automatically parsing the response? This is where third-party libraries come in; <a href="https://dev.twitter.com/overview/api/twitter-libraries">lots of people</a> have already built external libraries that have abstracted out the repetitive parts of writing code to interact with the Twitter API. To use one, all you have to do is <code>pip install &lt;library name&gt;</code> from your terminal, and then import it into your file. Voila, you can now use someone else's third-party library from your own program!</p>
<p>There are some hazards to using other people's code. Sometimes you might have compatibility issues, or perhaps the library you want to use hasn't been updated in a really long time. Pay attention to the libraries you use. How thorough is the README? Is there additional documentation? Do they look like they're being worked on regularly? Do they have an IRC channel where you can ask questions if you'd like?</p>
<p>Using third-party libraries can mean trading convenience for behind-the-scenes complexity, and it may not always be worth it. If you're doing something simple, it might be better to use something from your language's standard library. But it's always good to know what other options exist.</p>


  <!-- POST NAVIGATION -->
  <div class="postNav clearfix">
      
     
  </div>
</div>

      </div>
   </div><!-- end .content -->

   <div class="footer">
   <div class="container">
      <p class="copy">Powered by <a href="https://www.11ty.dev/">Eleventy</a></p>

      <div class="footer-links"> 
         <ul class="noList"> 
            
            
            <li><a href="https://twitter.com/magpieohmy">
                  <svg id="twitter" class="custom-icon" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 100 100" style="height: 30px; width: 30px;"><circle class="outer-shape" cx="50" cy="50" r="48" style="opacity: 1;"></circle>
                  <path class="inner-shape" style="opacity: 1;" transform="translate(25,25) scale(0.5)" d="M99.001,19.428c-3.606,1.608-7.48,2.695-11.547,3.184c4.15-2.503,7.338-6.466,8.841-11.189 c-3.885,2.318-8.187,4-12.768,4.908c-3.667-3.931-8.893-6.387-14.676-6.387c-11.104,0-20.107,9.054-20.107,20.223 c0,1.585,0.177,3.128,0.52,4.609c-16.71-0.845-31.525-8.895-41.442-21.131C6.092,16.633,5.1,20.107,5.1,23.813 c0,7.017,3.55,13.208,8.945,16.834c-3.296-0.104-6.397-1.014-9.106-2.529c-0.002,0.085-0.002,0.17-0.002,0.255 c0,9.799,6.931,17.972,16.129,19.831c-1.688,0.463-3.463,0.71-5.297,0.71c-1.296,0-2.555-0.127-3.783-0.363 c2.559,8.034,9.984,13.882,18.782,14.045c-6.881,5.424-15.551,8.657-24.971,8.657c-1.623,0-3.223-0.096-4.796-0.282 c8.898,5.738,19.467,9.087,30.82,9.087c36.982,0,57.206-30.817,57.206-57.543c0-0.877-0.02-1.748-0.059-2.617 C92.896,27.045,96.305,23.482,99.001,19.428z"></path>
                  </svg>
            </a></li>
            
            
            <li><a href="https://github.com/macroscopicentric">
                  <svg id="github" class="custom-icon" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 100 100" style="height: 30px; width: 30px;"><circle class="outer-shape" cx="50" cy="50" r="48" style="opacity: 1;"></circle>
                  <path class="inner-shape" style="opacity: 1;" transform="translate(25,25) scale(0.5)" d="M50,1C22.938,1,1,22.938,1,50s21.938,49,49,49s49-21.938,49-49S77.062,1,50,1z M79.099,79.099 c-3.782,3.782-8.184,6.75-13.083,8.823c-1.245,0.526-2.509,0.989-3.79,1.387v-7.344c0-3.86-1.324-6.699-3.972-8.517 c1.659-0.16,3.182-0.383,4.57-0.67c1.388-0.287,2.855-0.702,4.402-1.245c1.547-0.543,2.935-1.189,4.163-1.938 c1.228-0.75,2.409-1.723,3.541-2.919s2.082-2.552,2.847-4.067s1.372-3.334,1.818-5.455c0.446-2.121,0.67-4.458,0.67-7.01 c0-4.945-1.611-9.155-4.833-12.633c1.467-3.828,1.308-7.991-0.478-12.489l-1.197-0.143c-0.829-0.096-2.321,0.255-4.474,1.053 c-2.153,0.798-4.57,2.105-7.249,3.924c-3.797-1.053-7.736-1.579-11.82-1.579c-4.115,0-8.039,0.526-11.772,1.579 c-1.69-1.149-3.294-2.097-4.809-2.847c-1.515-0.75-2.727-1.26-3.637-1.532c-0.909-0.271-1.754-0.439-2.536-0.503 c-0.782-0.064-1.284-0.079-1.507-0.048c-0.223,0.031-0.383,0.064-0.478,0.096c-1.787,4.53-1.946,8.694-0.478,12.489 c-3.222,3.477-4.833,7.688-4.833,12.633c0,2.552,0.223,4.889,0.67,7.01c0.447,2.121,1.053,3.94,1.818,5.455 c0.765,1.515,1.715,2.871,2.847,4.067s2.313,2.169,3.541,2.919c1.228,0.751,2.616,1.396,4.163,1.938 c1.547,0.543,3.014,0.957,4.402,1.245c1.388,0.287,2.911,0.511,4.57,0.67c-2.616,1.787-3.924,4.626-3.924,8.517v7.487 c-1.445-0.43-2.869-0.938-4.268-1.53c-4.899-2.073-9.301-5.041-13.083-8.823c-3.782-3.782-6.75-8.184-8.823-13.083 C9.934,60.948,8.847,55.56,8.847,50s1.087-10.948,3.231-16.016c2.073-4.899,5.041-9.301,8.823-13.083s8.184-6.75,13.083-8.823 C39.052,9.934,44.44,8.847,50,8.847s10.948,1.087,16.016,3.231c4.9,2.073,9.301,5.041,13.083,8.823 c3.782,3.782,6.75,8.184,8.823,13.083c2.143,5.069,3.23,10.457,3.23,16.016s-1.087,10.948-3.231,16.016 C85.848,70.915,82.88,75.317,79.099,79.099L79.099,79.099z"></path>
                  </svg>
            </a></li>
             
            
         </ul>
      </div>
   </div>
</div><!-- end .footer -->


   <!-- Add jQuery and other scripts -->
<!--
    Yes I would like to delete this, why are we using jQuery in the
    year of our lord 2024, but it's doing positioning and font
    shenanigans and I would like to get the blog working before fussing with aesthetics, and by aesthetics I mean "not using jQuery."
-->
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
<script src="/assets/js/dropcap.min.js"></script>
<script src="/assets/js/responsive-nav.min.js"></script>
<script src="/assets/js/scripts.js"></script>


</body>

</html>
